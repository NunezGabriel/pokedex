{"ast":null,"code":"import { tokenKey, BASE_URI } from \"../config\";\nexport default async function collectionClient(endpoint) {\n  let {\n    method,\n    headers,\n    body\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const token = sessionStorage.getItem(tokenKey);\n  // const token = \"G1xBV2tpHQCCn63y13upccWh\";\n\n  if (token) {\n    headers = {\n      Authorization: `Bearer ${token}`,\n      ...headers\n    };\n  }\n  if (body) {\n    headers = {\n      \"Content-Type\": \"application/json\",\n      ...headers\n    };\n  }\n  const config = {\n    method: method || (body ? \"POST\" : \"GET\"),\n    headers,\n    body: body ? JSON.stringify(body) : null\n  };\n  const response = await fetch(BASE_URI + endpoint, config);\n  let data;\n  if (!response.ok) {\n    // if (sessionStorage.getItem(tokenKey) && response.status === 401) {\n    //   sessionStorage.removeItem(tokenKey);\n    //   window.location.reload();\n    // }\n    try {\n      data = await response.json();\n    } catch (error) {\n      throw new Error(response.statusText);\n    }\n    throw new Error(data.errors);\n  }\n  try {\n    data = await response.json();\n  } catch (error) {\n    data = response.statusText;\n  }\n  return data;\n}","map":{"version":3,"names":["tokenKey","BASE_URI","collectionClient","endpoint","method","headers","body","arguments","length","undefined","token","sessionStorage","getItem","Authorization","config","JSON","stringify","response","fetch","data","ok","json","error","Error","statusText","errors"],"sources":["/Users/gabrielnunez/Desktop/pokedex/src/services/collection-client.js"],"sourcesContent":["import { tokenKey, BASE_URI } from \"../config\";\n\nexport default async function collectionClient(\n  endpoint,\n  { method, headers, body } = {}\n) {\n  const token = sessionStorage.getItem(tokenKey);\n  // const token = \"G1xBV2tpHQCCn63y13upccWh\";\n\n  if (token) {\n    headers = {\n      Authorization: `Bearer ${token}`,\n      ...headers,\n    };\n  }\n\n  if (body) {\n    headers = {\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    };\n  }\n\n  const config = {\n    method: method || (body ? \"POST\" : \"GET\"),\n    headers,\n    body: body ? JSON.stringify(body) : null,\n  };\n\n  const response = await fetch(BASE_URI + endpoint, config);\n\n  let data;\n\n  if (!response.ok) {\n    // if (sessionStorage.getItem(tokenKey) && response.status === 401) {\n    //   sessionStorage.removeItem(tokenKey);\n    //   window.location.reload();\n    // }\n    try {\n      data = await response.json();\n    } catch (error) {\n      throw new Error(response.statusText);\n    }\n    throw new Error(data.errors);\n  }\n\n  try {\n    data = await response.json();\n  } catch (error) {\n    data = response.statusText;\n  }\n\n  return data;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,WAAW;AAE9C,eAAe,eAAeC,gBAAgBA,CAC5CC,QAAQ,EAER;EAAA,IADA;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE9B,MAAMG,KAAK,GAAGC,cAAc,CAACC,OAAO,CAACZ,QAAQ,CAAC;EAC9C;;EAEA,IAAIU,KAAK,EAAE;IACTL,OAAO,GAAG;MACRQ,aAAa,EAAG,UAASH,KAAM,EAAC;MAChC,GAAGL;IACL,CAAC;EACH;EAEA,IAAIC,IAAI,EAAE;IACRD,OAAO,GAAG;MACR,cAAc,EAAE,kBAAkB;MAClC,GAAGA;IACL,CAAC;EACH;EAEA,MAAMS,MAAM,GAAG;IACbV,MAAM,EAAEA,MAAM,KAAKE,IAAI,GAAG,MAAM,GAAG,KAAK,CAAC;IACzCD,OAAO;IACPC,IAAI,EAAEA,IAAI,GAAGS,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC,GAAG;EACtC,CAAC;EAED,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACjB,QAAQ,GAAGE,QAAQ,EAAEW,MAAM,CAAC;EAEzD,IAAIK,IAAI;EAER,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,IAAI;MACFD,IAAI,GAAG,MAAMF,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAACN,QAAQ,CAACO,UAAU,CAAC;IACtC;IACA,MAAM,IAAID,KAAK,CAACJ,IAAI,CAACM,MAAM,CAAC;EAC9B;EAEA,IAAI;IACFN,IAAI,GAAG,MAAMF,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,IAAI,GAAGF,QAAQ,CAACO,UAAU;EAC5B;EAEA,OAAOL,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}